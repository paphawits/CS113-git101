อาเรย์
คือตัวแปรที่เก็บข้อมูลเป็นชุดข้อมูล โดยข้อมูลของอาเรย์จะเก็บในรูปแบบของลำดับข้อมูล โดยข้อมูลนั้นจะต้องเป็นประเภทเดียวกัน ในการประกาศอาเรย์ในภาษา C มันมีรูปแบบคือ
type name[size]; 
โดย type คือประเภทของตัวแปรของอาเรย์ที่เราจะสร้าง name เป็นชื่อของตัวแปรอาเรย์ และ size เป็นขนาดของอาเรย์ การใช้อาเรย์ทำให้เราสามารถจัดการข้อมูลได้ง่ายขึ้น กว่าการใช้ตัวแปรธรรมดา
int n1 = 5;
int n2 = 10;
int n3 = 20;
int n4 = 30;
int n5 = 50;
กลายเป็น
 int n[5] = {5, 10, 20, 30, 50};

การประกาศอาเรย์ คล้ายกับการประกาศตัวแปร เพราะว่าอาเรย์ก็เป็นตัวแปรประเภทหนึ่ง ดังนั้นในการที่จะใช้งานอาเรย์ เราจำเป็นที่จะต้องประกาศมันก่อน
int n[5];
char name[20];
double m[10];
 
การอ่านค่าในอาเรย์
int n[5] = {5, 10, 20, 30, 50};
จากการประกาศอาเรย์ด้านบน เราจะใช้ index 0 ถึง 4 ในการเข้าถึงค่าตามลำดับ โดย 0 เป็นอาเรย์ตัวแรก ดังนั้นถ้าเราต้องการเข้าถึงค่า 20 จึงใช้ n[2] ซึ่งคือตำแหน่งข้อมูลที่ 20 อยู่ 

การใช้คำสั่ง for loop กับอาเรย์
เนื่องจากอาเรย์เป็นลำดับของตัวแปรและใช้ index ในการเข้าถึงข้อมูลมันจึงได้รับความนิยมในการใช้กับ for loop เพื่อที่จะเข้าถึงค่าในอาเรย์ การใช้ for loop กับอาเรย์มีประโยชน์เป็นอย่างมาก เราสามารถที่จะใช้อ่านข้อมูลและใส่ข้อมูลก็ได้

อาเรย์ 2 มิติ โดยอาเรย์สองมิติ ให้คุณจินตนาการว่ามันคือตาราง ซึ่งก็คืออาเรย์ของอาเรย์ 1 มิตินั่นเอง
int a[3][4] = {
    {35, 6, 1},
    {4, 5, 16},
    {9, 7, 92}
};
char b[5][10];
ในการอ่านค่าอาเรย์นั้นเหมือนกันกับการอ่านค่าอาเรย์ 1 มิติ แต่เราต้องใช้ index สองตัว คุณคงจะเคยเรียนเรื่อง matrix มาแล้ว เราใช้การเข้าถึงแบบนั้น แต่ว่าจำไว้ว่า index ของอาเรย์จะเริ่มจาก 0 เสมอ เหมื่อนที่ได้บอกไปก่อนหน้านี้ เช่น เลข 7 ในตัวแปรอาเรย์ a จะอยู่ที่ตำแหน่ง a[2][1] และเราก็ยังคงสามารถใช้ for loop ในการอ่านค่าทั้งหมดของอาเรย์ได้

อาเรย์หลายมิติ ในภาษา C ยังมีอาเรย์ที่มากกว่า 2 มิติ คือ อาเรย์ 3 มิติ อาเรย์ 4 มิติ และมากว่านั้น แต่โดยส่วนมากแล้วเราไม่ค่อยที่จะได้ใช้มัน